version: '3.8'

services:
  app:
    container_name: ${PROJECT_NAME}
    stop_signal: SIGINT
    build:
      context: .
    working_dir: /app
    volumes:
      - .:/app
      - static:/app/static
      - media:/app/media
    env_file:
      - .env
    expose:
      - 8000
    depends_on:
      - postgres

  postgres:
    container_name: ${PROJECT_NAME}_postgres
    image: postgres:14.11-alpine
    ports:
      - "${DB_PORT}:5432"
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql@14/data:rw
    command: "postgres -c max_connections=150
             -c shared_buffers=512MB -c effective_cache_size=1536MB
             -c maintenance_work_mem=128MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
             -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200
             -c work_mem=3495kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=2
             -c max_parallel_workers_per_gather=1 -c max_parallel_workers=2 -c max_parallel_maintenance_workers=1"
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  nginx:
    container_name: ${PROJECT_NAME}_nginx
    image: nginx
    ports:
      - "${PORT}:80"
    depends_on:
      - app
    volumes:
      - static:/app/static
      - media:/app/media
      - nginx_conf:/app/nginx
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/logs:/var/log/nginx
    env_file:
      - .env

volumes:
  pgdata:
  nginx_conf:
  static:
  media: